version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: uk-job-tracker-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: jobtracker
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./server
    container_name: uk-job-tracker-backend
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/jobtracker
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: jobtracker
      DB_USER: postgres
      DB_PASSWORD: postgres
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: jobtracker
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      NODE_ENV: development
      PORT: 3001
      JWT_SECRET: uk-job-tracker-secret-key-2025-production-safe
      ALLOWED_ORIGINS: http://localhost:3000
    ports:
      - "3001:3001"
    volumes:
      - ./server:/app
      - /app/node_modules
    command: npm run dev

  frontend:
    build:
      context: ./client
    container_name: uk-job-tracker-frontend
    depends_on:
      - backend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3001
    ports:
      - "3000:3000"
    volumes:
      - ./client:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev

volumes:
  postgres_data:

